openapi: 3.0.0
info:
  title: "BikeCheck (Name TBD)"
  version: "1.0"
  description: "An API to figure out when the fuck I need to take care of my bike"

servers:
  - url: "http://localhost:3000/api"
paths:
  /profiles:
    get:
      summary: Get all profiles
      security:
        - jwtAuth: []
      responses:
        "200":
          description: A list of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Profile"
  /profiles/{profileId}:
    get:
      summary: Get a profile by ID
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
    put:
      summary: Update a profile by ID
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        "200":
          description: Updated profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
  /profiles/{profileId}/bikes:
    get:
      summary: Get all bikes for a profile
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of bikes for the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bike"
    post:
      summary: Add a new bike to a profile
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bike"
      responses:
        "201":
          description: New bike created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bike"
  /bikes/{bikeId}/components:
    get:
      summary: Get all components for a bike
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: bikeId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of components for the bike
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Component"
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        bikes:
          type: array
          items:
            $ref: "#/components/schemas/Bike"
    Bike:
      type: object
      properties:
        id:
          type: integer
        make:
          type: string
        model:
          type: string
        profileId:
          type: integer
        components:
          type: array
          items:
            $ref: "#/components/schemas/Component"
    Component:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        status:
          type: string
        bikeId:
          type: integer
