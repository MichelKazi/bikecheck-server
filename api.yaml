openapi: 3.0.0
info:
  title: BikeTracker API
  version: 1.0.0
  description: API for managing profiles, their bikes, and bike components.

servers:
  - url: https://api.yourbiketracker.com/
    description: Production server

paths:
  /profiles:
    post:
      summary: Create a new profile
      operationId: createProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  profileId:
                    type: string
                  message:
                    type: string
        "400":
          description: Invalid request data

  /profiles/{profileId}/bikes:
    post:
      summary: Add a bike to a user
      operationId: addBike
      parameters:
        - name: profileId
          in: path
          required: true
          description: The user ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                make:
                  type: string
                model:
                  type: string
                year:
                  type: integer
                type:
                  type: string
              required:
                - make
                - model
                - year
                - type
      responses:
        "201":
          description: Bike added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  bikeId:
                    type: string
                  message:
                    type: string
        "400":
          description: Invalid request data
        "404":
          description: User not found

  /profiles/{profileId}/bikes/{bikeId}/components:
    post:
      summary: Add a component to a bike
      operationId: addComponent
      parameters:
        - name: profileId
          in: path
          required: true
          description: The user ID
          schema:
            type: string
        - name: bikeId
          in: path
          required: true
          description: The bike ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                status:
                  type: number
                  format: float
                lastServiced:
                  type: string
                  format: date
              required:
                - type
                - status
                - lastServiced
      responses:
        "201":
          description: Component added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  componentId:
                    type: string
                  message:
                    type: string
        "400":
          description: Invalid request data
        "404":
          description: User or Bike not found
